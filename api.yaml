openapi: 3.0.1
servers:
  - url: https://api.spotify.com/v1
info:
  title: Tom Test API
  version: 2023.3.28
#   x-apisguru-categories:
#     - media
#   x-logo:
#     url: https://logo-core.clearbit.com/spotify.com
#   x-origin:
#     - format: openapi
#       url: https://raw.githubusercontent.com/sonallux/spotify-web-api/master/spotify-web-api-generator-open-api/spotify-web-api-openapi.yml
#       version: "3.0"
#   x-providerName: spotify.com
#   x-unofficialSpec: true

paths:
  /toms:
    get:
      description: Get Spotify catalog information for multiple albums identified by
        their Spotify IDs.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-multiple-albums
      operationId: endpoint-get-multiple-albums
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: "A comma-separated list of the [Spotify
            IDs](https://developer.spotify.com/documentation/web-api/#spotify-u\
            ris-and-ids) for the albums. Maximum: 20 IDs."
          in: query
          name: ids
          required: true
          schema:
            type: string
        - description: An [ISO 3166-1 alpha-2 country
            code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or the string
            from_token. Provide this parameter if you want to apply [Track
            Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/).
          in: query
          name: market
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumsObject"
          description: >-
            On success, the HTTP status code in the response header is `200` OK
            and the response body contains an object whose key is `"albums"` and
            whose value is an array of [album
            objects](https://developer.spotify.com/documentation/web-api/reference/#object-albumobject)
            in JSON format.


            Objects are returned in the order requested. If an object is not found, a `null` value is returned in the appropriate position. Duplicate `ids` in the query will result in duplicate objects in the response. On error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes) and the response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema).
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - spotify_auth: []
      summary: Get Multiple Albums
      tags:
        - category-albums
  "/toms/{id}":
    get:
      description: Get Spotify catalog information for a single album.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-an-album
      operationId: endpoint-get-an-album
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: The Spotify ID of the album.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The market you'd like to request. Synonym for `country`.
          in: query
          name: market
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumObject"
          description: On success, the HTTP status code in the response header is 200 OK
            and the response body contains an album object in JSON format. On
            error, the header status code is an error code and the response body
            contains an error object.
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - spotify_auth: []
      summary: Get an Album
      tags:
        - category-albums
 
